AWSTemplateFormatVersion: 2010-09-09
Description: Configures an AWS CodePipeline as a continuous-delivery solution for the Pricing Algorithm infrastructure

Parameters:
  Application:
    Description: The application name
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
  DeployableUnitName:
    Description: The deployable unit name
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
  TechnicalContact:
    Description: Email address for technical contact, used in resource tags
    Type: String
    AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: must be a valid email address.
  NotifyOnEvents:
    Description: Comma separated list of email addresses to notify on major events
    Type: String
  GitHubOwner:
    Description: GitHub username owning the repo
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubRepo:
    Description: GitHub repo name
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubBranch:
    Description: GitHub repo branch name
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
  ManualApproval:
    Description: Wait for approval before deploying to production?
    Type: String
  DevAccount:
    Description: AWS account number for dev
    Type: Number
  ProdAccount:
    Description: AWS account number for production
    Type: Number

Conditions:
  NeedsApproval: !Equals [ !Ref ManualApproval, true ]

Resources:
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Application
          Value: !Ref Application
        - Key: DeployableUnitName
          Value: !Ref DeployableUnitName
        - Key: GitHubBranch
          Value: !Ref GitHubBranch
        - Key: Technical Contact
          Value: !Ref TechnicalContact

  SubscribeContactsToTopic:
    Type: Custom::SubscribeToTopicCustomResource
    Properties:
      ServiceToken: !ImportValue SubscribeToTopicResourceArn
      TopicArn: !Ref NotificationTopic
      Endpoints: !Split [ ",", !Ref NotifyOnEvents ]
      Protocol: email

  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Used by Assumed Roles in Dev/Prod accounts to Encrypt/Decrypt code
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: !Ref AWS::StackName
        Statement:
          - Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: "*"
          - Sid: Allow use of the key for Artifact Bucket encrypt/decrypt
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:${AWS::Partition}:iam::${DevAccount}:root
                - !Sub arn:${AWS::Partition}:iam::${ProdAccount}:root
                - !GetAtt CodeBuildRole.Arn
                - !GetAtt CodePipelineRole.Arn
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
      Tags:
        - Key: Application
          Value: !Ref Application
        - Key: DeployableUnitName
          Value: !Ref DeployableUnitName
        - Key: GitHubBranch
          Value: !Ref GitHubBranch
        - Key: Technical Contact
          Value: !Ref TechnicalContact

  ArtifactStore:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: Application
          Value: !Ref Application
        - Key: DeployableUnitName
          Value: !Ref DeployableUnitName
        - Key: GitHubBranch
          Value: !Ref GitHubBranch
        - Key: Technical Contact
          Value: !Ref TechnicalContact

  ArtifactStoreBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactStore
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:*
            Resource:
              - !Sub ${ArtifactStore.Arn}
              - !Sub ${ArtifactStore.Arn}/*
            Principal:
              AWS:
                - !Sub arn:${AWS::Partition}:iam::${DevAccount}:root
                - !Sub arn:${AWS::Partition}:iam::${DevAccount}:role/${Application}-${GitHubBranch}-dev-CodePipelineCrossAccountRole
                - !Sub arn:${AWS::Partition}:iam::${DevAccount}:role/${Application}-${GitHubBranch}-dev-CloudFormationDeployerRole
                - !Sub arn:${AWS::Partition}:iam::${ProdAccount}:root
                - !Sub arn:${AWS::Partition}:iam::${ProdAccount}:role/${Application}-${GitHubBranch}-prod-CodePipelineCrossAccountRole
                - !Sub arn:${AWS::Partition}:iam::${ProdAccount}:role/${Application}-${GitHubBranch}-prod-CloudFormationDeployerRole
                - !GetAtt CodeBuildRole.Arn

  CleanupArtifactStoreOnDeletion:
    Type: Custom::S3CustomResource
    Properties:
      ServiceToken: !ImportValue CleanupS3BucketResourceArn
      S3_Bucket: !Ref ArtifactStore

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub Used in CodeBuild project. Created by CloudFormation ${AWS::StackId}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
            Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: codebuild.amazonaws.com
      Tags:
        - Key: Application
          Value: !Ref Application
        - Key: DeployableUnitName
          Value: !Ref DeployableUnitName
        - Key: GitHubBranch
          Value: !Ref GitHubBranch
        - Key: Technical Contact
          Value: !Ref TechnicalContact

  CodeBuildPolicy:
    DependsOn: ArtifactStoreBucketPolicy
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Application}-${DeployableUnitName}-${GitHubBranch}-CodeBuildPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: !GetAtt BuildProjectLogGroup.Arn
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket
            Resource:
              - !Sub ${ArtifactStore.Arn}
              - !Sub ${ArtifactStore.Arn}/*
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
            Resource: !GetAtt KMSKey.Arn
      Roles:
        - !Ref CodeBuildRole

  BuildProjectLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/codebuild/${AWS::StackName}-BuildProject
      RetentionInDays: 7

  BuildProject:
    DependsOn: CodeBuildPolicy
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-BuildProject
      Description: !Sub ${Application}-${DeployableUnitName}-${GitHubBranch}
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub ${DeployableUnitName}/buildspec.yaml
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ARTIFACT_STORE
            Value: !Ref ArtifactStore
          - Name: DEPLOYABLE_UNIT
            Value: !Ref DeployableUnitName
      TimeoutInMinutes: 10
      Tags:
        - Key: Application
          Value: !Ref Application
        - Key: DeployableUnitName
          Value: !Ref DeployableUnitName
        - Key: GitHubBranch
          Value: !Ref GitHubBranch
        - Key: Technical Contact
          Value: !Ref TechnicalContact

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub Used by CodePipeline. Created by CloudFormation ${AWS::StackId}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service: codepipeline.amazonaws.com
      Tags:
        - Key: Application
          Value: !Ref Application
        - Key: DeployableUnitName
          Value: !Ref DeployableUnitName
        - Key: GitHubBranch
          Value: !Ref GitHubBranch
        - Key: Technical Contact
          Value: !Ref TechnicalContact

  CodePipelinePolicy:
    DependsOn: ArtifactStoreBucketPolicy
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Application}-${DeployableUnitName}-${GitHubBranch}-CodePipelinePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:DeleteObject
              - s3:GetObject*
              - s3:GetObjectVersion
              - s3:PutObject
              - s3:PutObjectVersion
              - s3:GetBucketVersioning
              - s3:ListBucket
              - s3:GetBucketPolicy
            Resource:
              - !Sub ${ArtifactStore.Arn}
              - !Sub ${ArtifactStore.Arn}/*
          - Effect: Allow
            Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
            Resource:
              - !GetAtt BuildProject.Arn
          - Effect: Allow
            Action:
              - sns:Publish
            Resource:
              - !Ref NotificationTopic
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${DevAccount}:role/${Application}-${GitHubBranch}-dev-CodePipelineCrossAccountRole
              - !Sub arn:${AWS::Partition}:iam::${ProdAccount}:role/${Application}-${GitHubBranch}-prod-CodePipelineCrossAccountRole
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt KMSKey.Arn
      Roles:
        - !Ref CodePipelineRole

  CodePipeline:
    DependsOn: CodePipelinePolicy
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStore
        EncryptionKey:
          Id: !GetAtt KMSKey.Arn
          Type: KMS
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: "{{resolve:secretsmanager:CICD:SecretString:GitHubPersonalAccessToken}}"
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: DeployToDev
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !Sub arn:${AWS::Partition}:iam::${DevAccount}:role/${Application}-${GitHubBranch}-dev-CloudFormationDeployerRole
                StackName: !Sub ${Application}-${DeployableUnitName}-${GitHubBranch}-dev
                TemplatePath: BuildArtifact::packaged-template.yml
                TemplateConfiguration: BuildArtifact::dev-config.json
                ParameterOverrides: !Sub |
                  {
                    "Application": "${Application}",
                    "Environment": "dev",
                    "DeployableUnitName": "${DeployableUnitName}",
                    "GitHubBranch": "${GitHubBranch}",
                    "TechnicalContact": "${TechnicalContact}",
                    "NotifyOnEvents": "${NotifyOnEvents}"
                  }
                ChangeSetName: !Sub a-${Application}-${DeployableUnitName}-${GitHubBranch}-dev-Deploy
              RunOrder: 1
              RoleArn: !Sub arn:${AWS::Partition}:iam::${DevAccount}:role/${Application}-${GitHubBranch}-dev-CodePipelineCrossAccountRole
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !Sub arn:${AWS::Partition}:iam::${DevAccount}:role/${Application}-${GitHubBranch}-dev-CloudFormationDeployerRole
                StackName: !Sub ${Application}-${DeployableUnitName}-${GitHubBranch}-dev
                ChangeSetName: !Sub a-${Application}-${DeployableUnitName}-${GitHubBranch}-dev-Deploy
              RunOrder: 3
              RoleArn: !Sub arn:${AWS::Partition}:iam::${DevAccount}:role/${Application}-${GitHubBranch}-dev-CodePipelineCrossAccountRole
        - Name: DeployToProd
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !Sub arn:${AWS::Partition}:iam::${ProdAccount}:role/${Application}-${GitHubBranch}-prod-CloudFormationDeployerRole
                StackName: !Sub ${Application}-${DeployableUnitName}-${GitHubBranch}-prod
                TemplatePath: BuildArtifact::packaged-template.yml
                TemplateConfiguration: BuildArtifact::prod-config.json
                ParameterOverrides: !Sub |
                  {
                    "Application": "${Application}",
                    "Environment": "prod",
                    "DeployableUnitName": "${DeployableUnitName}",
                    "GitHubBranch": "${GitHubBranch}",
                    "TechnicalContact": "${TechnicalContact}",
                    "NotifyOnEvents": "${NotifyOnEvents}"
                  }
                ChangeSetName: !Sub a-${Application}-${DeployableUnitName}-${GitHubBranch}-prod-Deploy
              RunOrder: 1
              RoleArn: !Sub arn:${AWS::Partition}:iam::${ProdAccount}:role/${Application}-${GitHubBranch}-prod-CodePipelineCrossAccountRole
            - !If
              - NeedsApproval
              - Name: ManualApproval
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: 1
                Configuration:
                  NotificationArn: !Ref NotificationTopic
                  CustomData: "Approve or Reject this change after running any needed tests"
                RunOrder: 2
              - !Ref AWS::NoValue
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !Sub arn:${AWS::Partition}:iam::${ProdAccount}:role/${Application}-${GitHubBranch}-prod-CloudFormationDeployerRole
                StackName: !Sub ${Application}-${DeployableUnitName}-${GitHubBranch}-prod
                ChangeSetName: !Sub a-${Application}-${DeployableUnitName}-${GitHubBranch}-prod-Deploy
              RunOrder: 3
              RoleArn: !Sub arn:${AWS::Partition}:iam::${ProdAccount}:role/${Application}-${GitHubBranch}-prod-CodePipelineCrossAccountRole
      Tags:
        - Key: Application
          Value: !Ref Application
        - Key: DeployableUnitName
          Value: !Ref DeployableUnitName
        - Key: GitHubBranch
          Value: !Ref GitHubBranch
        - Key: Technical Contact
          Value: !Ref TechnicalContact

  GitHubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: "{{resolve:secretsmanager:CICD:SecretString:GitHubPersonalAccessToken}}"
      RegisterWithThirdParty: true
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      # At this point, MatchEquals cannot accept a regular expression, so this does not work - check back later
      # Filters:
      #   - JsonPath: $.commits[*].*
      #     MatchEquals: ^infrastructure/.*
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version
